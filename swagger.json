{
  "swagger": "2.0",
  "info": {
    "description": "A NodeJS backend with PostgreSQL and Docker-containers for generating invoices and sending e-mails with attached pdf-files\n",
    "version": "1.0.0",
    "title": "Bills and invoices",
    "contact": {
      "email": "nik.tati1@gmail.com"
    }
  },
  "tags": [
    {
      "name": "customer",
      "description": "Adding customer"
    },
    {
      "name": "bill",
      "description": "Operations with bills"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/customer/": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Get all customers",
        "description": "You just get all available customers",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerData"
              }
            }
          },
          "404": {
            "description": "Server does not response"
          }
        }
      },
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Add a new customer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "First step of using server. You need to set customer's email, firstName and lastName",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerData"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/bill/": {
      "post": {
        "tags": [
          "bill"
        ],
        "summary": "create bill",
        "description": "This step can only be done AFTER you created customer. IMPORTANT - customerEmail should be already existed in dataBase (it is the same field as email in POST request in customer route). Also you have a choise - to set a new recipient Email (if there is still none of such recipinet in data base) or set the Email of recipient which is already exists.",

        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BillData"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "workPerformed": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "BillData": {
      "type": "object",
      "properties": {
        "recipientEmail": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "recipientsCompany": {
          "type": "string"
        },
        "works": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "workPerformed":{
              "type": "string"
            },
            "price":{
              "type": "integer",
          "format": "int64"
            }}
          }
        }
      },
      "xml": {
        "name": "BillData"
      }
    },
    "CustomerData": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CustomerData"
      }
    }
  },
  "externalDocs": {
    "description": "Localhost",
    "url": "http://localhost:7000"
  }
}